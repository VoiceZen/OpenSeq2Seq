# Create a new .envrc. This file is bash code that is going to be loaded by
# direnv.
#!/bin/bash
pyversion=3.7.3 # your python version
pvenv="titans" # you project name or what you want to call you virtual env

eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"

if  [[ -d $HOME/.pyenv/versions/$pyversion ]]; then
	echo "Required python version is already installed."
else
	echo "Required python version is being installed....."
	pyenv install $pyversion
fi

var=$(pyenv virtualenvs)

install="f"
if [[ -n $var && $var =~ " $pvenv (created from $HOME/.pyenv/versions/$pyversion" ]]; then
        echo "The virtual-env $pvenv already exists"
else
	install="t"
fi

run_custom_install="f"

if [[ $install == "t" ]];then
        echo "you need to activate it"
        # create the virtaul env if not exists
        pyenv virtualenv ${pyversion} ${pvenv}
        # activate it
        pyenv activate ${pvenv}
        run_custom_install="t"
else
       pyenv activate ${pvenv}
       if [[ -f ".custom_dependencies" ]]; then
	    stored_last_mod_time=$(cat .last_modified_status)
            check_last_mod_time=$(stat -c '%Y' .custom_dependencies)

            if [[ $stored_last_mod_time == $check_last_mod_time  ]]; then
                echo "No changes has been done in custom dependency file"
            else
                stat -c '%Y' .custom_dependencies > .last_modified_status
                echo "Modification detected in '.custom_dependies' file"
                read -r -p  "Do you still wish to install your custom dependencies? [Y/n]" input
                case $input in [yY][eE][sS]|[yY])
	                    run_custom_install="t";;
                [nN][oO]|[nN])
	                    run_custom_install="f";;
                *)
                exit 1
                esac
            fi
       else
             echo "Installation Done.."
       fi
fi

if [[ $run_custom_install == "t" ]];then
	bash ".custom_dependencies"
fi

eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"
unset PS1

export LD_LIBRARY_PATH=/usr/local/cuda/lib64/
export CUDA_VISIBLE_DEVICES=0,1
